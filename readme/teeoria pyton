Conceptos teóricos
Encapsulamiento de comportamiento para quela información sea reutizable
- Paradigmas de programación es un conjuto de herramietas metdoso y reglas que se reunen cohesivamente y se utilizan ara resolsver p
problemas computacionales

Map

Espero que ya haya quedado clara la idea básica de cómo funciona un programa: tenemos estructuras de datos, tenemos funciones, y luego aplicamos esas funciones a nuestras estructuras de datos para transformar nuestros datos.

Map es una función que nos ayuda a realizar este procedimiento muy fácilmente. Vamos a ver cómo funciona.

Digamos que tenemos una estructura de datos que se ve así:
numeros: [1,2,3,4,5,5,6,7,8,9]

Esto es una simple lista con ints dentro. Ahora, digamos que queremos multiplicar 
cada uno de los elementos de esta lista por 2. Una manera horrible, lenta e impráctica .
###Lo más conveiente es realizar el encapsulamiento de una función.

def multiplicar_por_dos(numero)
  resultado = numero * 2
  return resultado

map(multiplicar_por_dos, numeros)
Output: <map at 0x10dd53160>

##### La función list permite convertir cualquier cosa que le pases a una lista:
list(map(multiplicar_por_dos, numeros))
Output: [2,4,6,8,10,12,14,16,118]

#### LA FUNCION MAP  ####
Aplica la funcion elemento por elemento sin importar el numero de elemntos que haya.
Simplemente recorre todos los elemntos que encuentre, transformandolos y regresandolos
en una lista


#convirtiendo en 0's los numeros que no son pares
numeros = [2,34,54,45,77,99,12,13,15,1,2,7,10 ]
  if numeros % 2 == 0:
    return numeros
  else:
    return 0:


#filtrado de números 
def numero_es_positivo(numero):
  if numero >= 0:
    return True
  else:
    return False
